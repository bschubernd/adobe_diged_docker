#!/bin/sh
# bookdl
. $(dirname $0)/lib

usage()
{
    DEBUG=""; [ "$1" = "-d" ] && { DEBUG=1; shift; }
    if [ "$#" -ne 2 ] && [ "$#" -ne 3 ]; then
        err "usage: bookdl [-d] <tag> <acsm> [<dest>]
    -d  debug"
    fi
    tag="$1"
    acsm="$2"
    [ "$3" ] && dest="$3" || dest="."

    check_tag "$tag"
    check_file "$acsm"
    check_dir "$dest"
    srcimg="$img:$tag"
    check_img "$srcimg"
    dstimg="$img:$tag"
    check_vncport $vncport
}

cfg
usage "$@"
dbg "srcimg=<$srcimg> dstimg=<$dstimg>"
run_container
docker cp "$acsm" $container:/app/in.acsm
dbg_container app "after copy in.acsm"
start_digitaleditions in.acsm &

for i in $(seq 20); do
    book="$(docker exec $container sh -c "find /app -newer in.acsm \
        -name \"*.epub\" ! -name welcome.epub -print0 |
         xargs -0 ls -t | head -1")"
    echo "book=<$book>"
    [ "$book" ] && break
done
[ $i -eq 20 ] && err "no books are downloaded"
info "book download has started"

# if old books are also downloaded, we have to wait
while :; do
    a="$(docker exec $container sh -c "find /app \
        -name \"*.epub\" -print0 | xargs -0 ls -l")"
    sleep 30
    b="$(docker exec $container sh -c "find /app \
        -name \"*.epub\" -print0 | xargs -0 ls -l")"
    [ "$a" = "$b" ] && break
done
info "book download has stopped"

book="$(docker exec $container sh -c "find /app -newer in.acsm \
    -name \"*.epub\" ! -name welcome.epub -print0 |
    xargs -0 ls -tr | head -1")"
info "book <$(basename "$book")> found, copying to <$dest>"
docker cp $container:"$book" $dest
dbg_container app "after copying book"
